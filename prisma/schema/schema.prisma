generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi", "postgresqlExtensions", "prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Payment {
  payment_id  Int      @id @default(autoincrement())
  bank_number String
  bank_bin    String
  amount      Int?
  content     String?
  create_at   DateTime @default(now())
  create_by   String
}

model User {
  user_id          String    @id
  card_id          String?
  last_claim_daily DateTime?
  last_claim_quest DateTime?
  streak_daily     Int       @default(0)
  streak_winner    Int       @default(0)
  streak_a         Int       @default(0)
  streak_r         Int       @default(0)
  streak_ur        Int       @default(0)
  streak_s         Int       @default(0)
  total_pack       Int       @default(0)
  soul             Int       @default(0)
  candy            Int       @default(0)
  premium_candy    Int       @default(0)
  quests           Quest[]
  cards            Card[]
  packs            Pack[]

  @@map("user")
}

model Quest {
  quest_id      String        @id @default(cuid())
  user_id       String
  user          User          @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Cascade)
  name          String
  reward_item   Item
  reward_amount Int
  target        Int
  progress      Int           @default(0)
  function      QuestFunction
  channel_id    String?

  @@map("quest")
}

model Card {
  card_id     String
  name        String
  image       String
  inv         User   @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Cascade)
  rank        Rank
  user_id     String
  quantity    Int    @default(1)
  level       Int    @default(1)

  @@unique([card_id, user_id])
  @@map("card")
}

model Pack {
  pack_id  String
  inv      User   @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Cascade)
  user_id  String
  quantity Int    @default(1)

  @@unique([pack_id, user_id])
  @@map("pack")
}
